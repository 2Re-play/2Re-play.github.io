{"componentChunkName":"component---src-templates-post-tsx","path":"/Redux-intro/","result":{"data":{"markdownRemark":{"html":"<h3 id=\"redux란\" style=\"position:relative;\"><a href=\"#redux%EB%9E%80\" aria-label=\"redux란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux란</h3>\n<hr>\n<ul>\n<li>가장 사용률이 높은 상태 관리 라이브러리</li>\n<li>컴포넌트들의 상태 관련 로직들을 다른 파일로 분리시켜서 더욱 효율적으로 관리 가능</li>\n<li>컴포넌트끼리 상태를 공유할 때 여러 컴포넌트를 거치지 않고도 손쉽게 상태 값을 전달 할 수 있다.</li>\n<li>상태변화 로직이 들어있는 <strong>스토오</strong>를 통하여, 우리가 원하는 컴포넌트에 원하는 상태값과 함수를 직접 주입할 수 있다.</li>\n</ul>\n<h3 id=\"redux에서-자주-사용되는-개념-정리\" style=\"position:relative;\"><a href=\"#redux%EC%97%90%EC%84%9C-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC\" aria-label=\"redux에서 자주 사용되는 개념 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Redux에서 자주 사용되는 개념 정리</h3>\n<hr>\n<h4 id=\"액션\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98\" aria-label=\"액션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션</h4>\n<ul>\n<li>상태에 어떠한 변화가 필요하게 될 때 액션이라는 것을 발생시킨다.</li>\n<li>하나의 객체로 표현하며 액션 객체에는 type필드는 필수로 들어가야한다.</li>\n<li>\n<p>그 외 data는 사용자 마음대로 조정이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>\ntype <span class=\"token operator\">:</span> <span class=\"token string\">\"ADD_TODO\"</span><span class=\"token punctuation\">,</span>\ndata <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  id <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  text <span class=\"token operator\">:</span> <span class=\"token string\">\"리덕스 배우기\"</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"액션-생성함수-action-creator\" style=\"position:relative;\"><a href=\"#%EC%95%A1%EC%85%98-%EC%83%9D%EC%84%B1%ED%95%A8%EC%88%98-action-creator\" aria-label=\"액션 생성함수 action creator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>액션 생성함수 (Action Creator)</h4>\n<ul>\n<li>액션을 만드는 함수다.</li>\n<li>파라미터를 받아와 액션 객체 형태로 만들어주는 책임이 있다.</li>\n<li>액션 생성함수를 통해 액션을 생성하는 이유는 따로 있다.</li>\n<li>나중에 컴포넌트에서 더욱 쉽게 액션을 발생시키기 위해서다.</li>\n<li>때문에 보통 함수 앞에 export 키워드를 통해 다른 파일에서 불러와서 사용한다.</li>\n<li>액션 생성함수는 필수적으로 구현요소가 아니다.</li>\n<li>\n<p>액션을 발생 시킬 때 마다 직접 액션 객체를 작성해도 괜찮다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addTodo</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\ntype<span class=\"token operator\">:</span> <span class=\"token string\">\"ADD_TODO\"</span><span class=\"token punctuation\">,</span>\ndata\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"reducer\" style=\"position:relative;\"><a href=\"#reducer\" aria-label=\"reducer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reducer</h4>\n<ul>\n<li>리듀서는 state의 변화시키는 역할을 한다.</li>\n<li>2가지 파라미터를 받는다.</li>\n<li>첫번째를 파라미터는 현재 state값, 두번째 파라미터는 변화를 시키고자 하는 액션 객체</li>\n<li>이 2가지 파라미터를 받아 새로운 state를 만든다.</li>\n<li>리덕서 리듀서에서는 default문에서는 기존 state를 반환하도록 작성한다.</li>\n<li>\n<p>리덕스를 사용할 때 여러개의 리듀서를 만들고 이를 하나의 루트 리듀서(Root Reducer)로 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">case</span> <span class=\"token string\">'ADD_TODO'</span> <span class=\"token operator\">:</span>\n  <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>todo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">default</span> <span class=\"token operator\">:</span>\n  <span class=\"token keyword\">return</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h4 id=\"store\" style=\"position:relative;\"><a href=\"#store\" aria-label=\"store permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Store</h4>\n<ul>\n<li>리덕스에서 한 애플리케이션에 하나의 스토어를 만들게 된다.</li>\n<li>스토어 안에는 현재 앱 상태, 리듀서가 들어있다.</li>\n<li>내장 함수도 포함되어 있다.</li>\n</ul>\n<h4 id=\"dispatch\" style=\"position:relative;\"><a href=\"#dispatch\" aria-label=\"dispatch permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dispatch</h4>\n<ul>\n<li>디스패치는 스토어의 내장함수 중 하나다.</li>\n<li>디스패치는 액션을 발생 시키는 역할을 한다.</li>\n<li>dispatch 함수에 액션을 파라미터로 전달한다.</li>\n<li>디스패치 함수를 호출하게 되면 스토어는 리듀서 함수를 실행시킨다.</li>\n<li>해당 액션을 처리하는 로직이 있다면 액션을 참고하여 새로운 상태를 만들어준다.</li>\n</ul>\n<h4 id=\"subscribe\" style=\"position:relative;\"><a href=\"#subscribe\" aria-label=\"subscribe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Subscribe</h4>\n<ul>\n<li>스토어의 내장함수다.</li>\n<li>함수 형태의 값을 파라미터로 받는다.</li>\n<li>액션이 디스패치 되었을 때 마다 전달해준 함수가 호출된다.</li>\n</ul>","excerpt":"Redux…","tableOfContents":"<ul>\n<li><a href=\"/Redux-intro/#redux%EB%9E%80\">Redux란</a></li>\n<li><a href=\"/Redux-intro/#redux%EC%97%90%EC%84%9C-%EC%9E%90%EC%A3%BC-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EA%B0%9C%EB%85%90-%EC%A0%95%EB%A6%AC\">Redux에서 자주 사용되는 개념 정리</a></li>\n</ul>","fields":{"slug":"/Redux-intro/"},"frontmatter":{"title":"React - Redux 기본 용어 개념","date":"Apr 09, 2020","tags":["react"],"keywords":["Jay's Dev Blog ","Jae Hyun"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/Redux-intro/","series":[],"lastmod":"0001-01-01"}}}